!function(r){"use strict";r.module("jiraErrorLogs.provider",[]),r.module("jiraErrorLogs.http",[]),r.module("jiraErrorLogs.config",[]),r.module("jiraErrorLogs.service",[]),r.module("jiraErrorLogs.directive",[]),r.module("jiraErrorLogs",["jiraErrorLogs.provider","jiraErrorLogs.http","jiraErrorLogs.service","jiraErrorLogs.config","jiraErrorLogs.directive"])}(angular),function(r){"use strict";function e(r){r.interceptors.push("jiraLogHttpInterceptor")}r.module("jiraErrorLogs.config").config(e)}(angular),function(r){"use strict";function e(){var r={restrict:"EA",template:'<pre style="display: none;" id="contexteDifyz">{{vm.refreshContextView()}}</pre>',scope:{userInfo:"@"},controller:o,controllerAs:"vm",bindToController:!0};return r}function o(r,e){function o(){var o=r.getUserHistoryLog(),t=r.getTechHistoryLog(),i="Version API SP: "+e.appVersion+"\n\n";return n.userInfo&&n.userInfo.login?(i+="Utilisateur actuellement identifié :\n\n",i+="* login: "+n.userInfo.login+"\n"):i+="Utilisateur actuellement non identifié.\n",o&&o.length>0&&(i+="\nDerniers événements fonctionnels:\n\n",o.forEach(function(r){i+="* "+r.date+" - "+r.msg+"\n"})),t&&t.length>0&&(i+="\nDerniers événements techniques:\n\n",t.forEach(function(r){i+="* "+r.date+" - "+r.msg+"\n"})),i}var n=this;n.refreshContextView=o}r.module("jiraErrorLogs.directive").directive("userContext",e),o.$inject=["logData","jiraErrorLogsSettings"]}(angular),function(r){"use strict";function e(){function r(r){t.push({date:new Date,msg:r}),t.length>5&&t.shift()}function e(){return t}function o(r){var e=new Date,o=e.toLocaleString()+"."+e.getMilliseconds();i.push({date:o,msg:r}),i.length>10&&i.shift()}function n(){return i}var t=[],i=[],s={addUserHistoryLog:r,getUserHistoryLog:e,addTechHistoryLog:o,getTechHistoryLog:n};return s}r.module("jiraErrorLogs.service").factory("logData",e)}(angular),function(r){"use strict";function e(r){var e={request:function(r){return console.log("config",r),r},requestError:function(e){return console.log("rejection",e),r.reject(e)},response:function(r){return console.log("response",r),r},responseError:function(e){return console.log("rejection",e),r.reject(e)}};return e}r.module("jiraErrorLogs.http").factory("jiraLogHttpInterceptor",e),e.$inject=["$q"]}(angular);